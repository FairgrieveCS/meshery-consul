{"kind":"IngressGateway","apiVersion":"consul.hashicorp.com/v1alpha1","display-name":"Ingress Gateway","format":"JSON","metadata":{"Logo URL":"","Primary Color":"#D62783","SVG_Color":"","SVG_White":"\u003csvg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cg clip-path=\"url(#a)\" fill=\"#fff\"\u003e\u003cpath fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.401 19.383c-1.873 0-3.33-1.503-3.33-3.436s1.457-3.436 3.33-3.436 3.33 1.503 3.33 3.436-1.457 3.436-3.33 3.436Zm6.504-1.825c-.832 0-1.56-.698-1.56-1.611 0-.86.675-1.61 1.56-1.61.832 0 1.561.697 1.561 1.61 0 .913-.728 1.61-1.56 1.61Zm5.62 1.503a1.516 1.516 0 0 1-1.874 1.126c-.832-.214-1.3-1.073-1.092-1.932a1.516 1.516 0 0 1 1.873-1.128c.779.214 1.3.966 1.144 1.825 0 0 0 .054-.052.107v.002Zm-1.095-4.082c-.833.214-1.665-.323-1.873-1.182a1.604 1.604 0 0 1 1.145-1.933c.832-.215 1.664.323 1.872 1.182.052.215.052.43 0 .644-.052.59-.468 1.128-1.144 1.289Zm5.515 3.865c-.157.859-.938 1.45-1.77 1.289a1.574 1.574 0 0 1-1.248-1.826c.155-.858.936-1.45 1.768-1.288.781.16 1.354.912 1.302 1.718-.052.053-.052.053-.052.107Zm-1.247-3.971c-.832.161-1.613-.43-1.769-1.288a1.575 1.575 0 0 1 1.25-1.826c.832-.161 1.612.43 1.768 1.289 0 .16.052.268 0 .429-.052.698-.572 1.289-1.249 1.396Zm-1.092 9.503c-.416.752-1.353 1.02-2.082.59-.728-.429-.988-1.395-.572-2.147.416-.752 1.353-1.02 2.081-.59.52.322.833.912.78 1.503-.051.215-.103.43-.207.644Zm-.573-14.603c-.728.43-1.665.16-2.08-.591-.417-.752-.157-1.718.572-2.148.728-.43 1.664-.16 2.08.591.157.322.209.59.209.913-.052.483-.312.966-.78 1.235\"/\u003e\u003cpath d=\"M15.453 32c-4.162 0-8.013-1.664-10.978-4.67A16.56 16.56 0 0 1 0 16c0-4.296 1.613-8.27 4.527-11.33C7.44 1.664 11.343 0 15.453 0c3.434 0 6.712 1.127 9.418 3.276l-1.924 2.576c-2.186-1.717-4.788-2.63-7.493-2.63-3.278 0-6.4 1.343-8.741 3.759-2.34 2.416-3.59 5.584-3.59 9.02 0 3.382 1.301 6.604 3.643 9.02 2.341 2.415 5.411 3.704 8.741 3.704 2.758 0 5.36-.913 7.492-2.63l1.874 2.576c-2.706 2.147-5.984 3.328-9.418 3.328l-.002.001Z\"/\u003e\u003c/g\u003e\u003cdefs\u003e\u003cclipPath id=\"a\"\u003e\u003cpath fill=\"#fff\" d=\"M0 0h32v32H0z\"/\u003e\u003c/clipPath\u003e\u003c/defs\u003e\u003c/svg\u003e","Secondary Color":"#ed74b4","Shape":"circle"},"model":{"name":"CONSUL","version":"v1.0.2","display-name":"CONSUL","category":"Orchestration \u0026 Management","sub-category":"Service Mesh"},"schema":"{\n \"description\": \"IngressGatewaySpec defines the desired state of IngressGateway.\",\n \"properties\": {\n  \"defaults\": {\n   \"description\": \"Defaults is default configuration for all upstream services\",\n   \"properties\": {\n    \"maxConcurrentRequests\": {\n     \"description\": \"The maximum number of concurrent requests that will be allowed at a single point in time. Use this to limit HTTP/2 traffic, since HTTP/2 has many requests per connection.\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"maxConnections\": {\n     \"description\": \"The maximum number of connections a service instance will be allowed to establish against the given upstream. Use this to limit HTTP/1.1 traffic, since HTTP/1.1 has a request per connection.\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"maxPendingRequests\": {\n     \"description\": \"The maximum number of requests that will be queued while waiting for a connection to be established.\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"listeners\": {\n   \"description\": \"Listeners declares what ports the ingress gateway should listen on, and what services to associated to those ports.\",\n   \"items\": {\n    \"description\": \"IngressListener manages the configuration for a listener on a specific port.\",\n    \"properties\": {\n     \"port\": {\n      \"description\": \"Port declares the port on which the ingress gateway should listen for traffic.\",\n      \"type\": \"integer\"\n     },\n     \"protocol\": {\n      \"description\": \"Protocol declares what type of traffic this listener is expected to receive. Depending on the protocol, a listener might support multiplexing services over a single port, or additional discovery chain features. The current supported values are: (tcp | http | http2 | grpc).\",\n      \"type\": \"string\"\n     },\n     \"services\": {\n      \"description\": \"Services declares the set of services to which the listener forwards traffic. For \\\"tcp\\\" protocol listeners, only a single service is allowed. For \\\"http\\\" listeners, multiple services can be declared.\",\n      \"items\": {\n       \"description\": \"IngressService manages configuration for services that are exposed to ingress traffic.\",\n       \"properties\": {\n        \"hosts\": {\n         \"description\": \"Hosts is a list of hostnames which should be associated to this service on the defined listener. Only allowed on layer 7 protocols, this will be used to route traffic to the service by matching the Host header of the HTTP request. \\n If a host is provided for a service that also has a wildcard specifier defined, the host will override the wildcard-specifier-provided \\\"\\u003cservice-name\\u003e.*\\\" domain for that listener. \\n This cannot be specified when using the wildcard specifier, \\\"*\\\", or when using a \\\"tcp\\\" listener.\",\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"maxConcurrentRequests\": {\n         \"description\": \"The maximum number of concurrent requests that will be allowed at a single point in time. Use this to limit HTTP/2 traffic, since HTTP/2 has many requests per connection.\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        },\n        \"maxConnections\": {\n         \"description\": \"The maximum number of connections a service instance will be allowed to establish against the given upstream. Use this to limit HTTP/1.1 traffic, since HTTP/1.1 has a request per connection.\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        },\n        \"maxPendingRequests\": {\n         \"description\": \"The maximum number of requests that will be queued while waiting for a connection to be established.\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        },\n        \"name\": {\n         \"description\": \"Name declares the service to which traffic should be forwarded. \\n This can either be a specific service, or the wildcard specifier, \\\"*\\\". If the wildcard specifier is provided, the listener must be of \\\"http\\\" protocol and means that the listener will forward traffic to all services. \\n A name can be specified on multiple listeners, and will be exposed on both of the listeners.\",\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \"Namespace is the namespace where the service is located. Namespacing is a Consul Enterprise feature.\",\n         \"type\": \"string\"\n        },\n        \"partition\": {\n         \"description\": \"Partition is the admin-partition where the service is located. Partitioning is a Consul Enterprise feature.\",\n         \"type\": \"string\"\n        },\n        \"requestHeaders\": {\n         \"description\": \"Allow HTTP header manipulation to be configured.\",\n         \"properties\": {\n          \"add\": {\n           \"additionalProperties\": {\n            \"type\": \"string\"\n           },\n           \"description\": \"Add is a set of name -\\u003e value pairs that should be appended to the request or response (i.e. allowing duplicates if the same header already exists).\",\n           \"type\": \"object\"\n          },\n          \"remove\": {\n           \"description\": \"Remove is the set of header names that should be stripped from the request or response.\",\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          },\n          \"set\": {\n           \"additionalProperties\": {\n            \"type\": \"string\"\n           },\n           \"description\": \"Set is a set of name -\\u003e value pairs that should be added to the request or response, overwriting any existing header values of the same name.\",\n           \"type\": \"object\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"responseHeaders\": {\n         \"description\": \"HTTPHeaderModifiers is a set of rules for HTTP header modification that should be performed by proxies as the request passes through them. It can operate on either request or response headers depending on the context in which it is used.\",\n         \"properties\": {\n          \"add\": {\n           \"additionalProperties\": {\n            \"type\": \"string\"\n           },\n           \"description\": \"Add is a set of name -\\u003e value pairs that should be appended to the request or response (i.e. allowing duplicates if the same header already exists).\",\n           \"type\": \"object\"\n          },\n          \"remove\": {\n           \"description\": \"Remove is the set of header names that should be stripped from the request or response.\",\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          },\n          \"set\": {\n           \"additionalProperties\": {\n            \"type\": \"string\"\n           },\n           \"description\": \"Set is a set of name -\\u003e value pairs that should be added to the request or response, overwriting any existing header values of the same name.\",\n           \"type\": \"object\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"tls\": {\n         \"description\": \"TLS allows specifying some TLS configuration per listener.\",\n         \"properties\": {\n          \"sds\": {\n           \"description\": \"SDS allows configuring TLS certificate from an SDS service.\",\n           \"properties\": {\n            \"certResource\": {\n             \"description\": \"CertResource is the SDS resource name to request when fetching the certificate from the SDS service.\",\n             \"type\": \"string\"\n            },\n            \"clusterName\": {\n             \"description\": \"ClusterName is the SDS cluster name to connect to, to retrieve certificates. This cluster must be specified in the Gateway's bootstrap configuration.\",\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"tls\": {\n      \"description\": \"TLS config for this listener.\",\n      \"properties\": {\n       \"cipherSuites\": {\n        \"description\": \"Define a subset of cipher suites to restrict Only applicable to connections negotiated via TLS 1.2 or earlier.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"enabled\": {\n        \"description\": \"Indicates that TLS should be enabled for this gateway service.\",\n        \"type\": \"boolean\"\n       },\n       \"sds\": {\n        \"description\": \"SDS allows configuring TLS certificate from an SDS service.\",\n        \"properties\": {\n         \"certResource\": {\n          \"description\": \"CertResource is the SDS resource name to request when fetching the certificate from the SDS service.\",\n          \"type\": \"string\"\n         },\n         \"clusterName\": {\n          \"description\": \"ClusterName is the SDS cluster name to connect to, to retrieve certificates. This cluster must be specified in the Gateway's bootstrap configuration.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"tlsMaxVersion\": {\n        \"description\": \"TLSMaxVersion sets the default maximum TLS version supported. Must be greater than or equal to `TLSMinVersion`. One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`. If unspecified, Envoy will default to TLS 1.3 as a max version for incoming connections.\",\n        \"type\": \"string\"\n       },\n       \"tlsMinVersion\": {\n        \"description\": \"TLSMinVersion sets the default minimum TLS version supported. One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`. If unspecified, Envoy v1.22.0 and newer will default to TLS 1.2 as a min version, while older releases of Envoy default to TLS 1.0.\",\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"enabled\"\n      ],\n      \"type\": \"object\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"tls\": {\n   \"description\": \"TLS holds the TLS configuration for this gateway.\",\n   \"properties\": {\n    \"cipherSuites\": {\n     \"description\": \"Define a subset of cipher suites to restrict Only applicable to connections negotiated via TLS 1.2 or earlier.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"enabled\": {\n     \"description\": \"Indicates that TLS should be enabled for this gateway service.\",\n     \"type\": \"boolean\"\n    },\n    \"sds\": {\n     \"description\": \"SDS allows configuring TLS certificate from an SDS service.\",\n     \"properties\": {\n      \"certResource\": {\n       \"description\": \"CertResource is the SDS resource name to request when fetching the certificate from the SDS service.\",\n       \"type\": \"string\"\n      },\n      \"clusterName\": {\n       \"description\": \"ClusterName is the SDS cluster name to connect to, to retrieve certificates. This cluster must be specified in the Gateway's bootstrap configuration.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"tlsMaxVersion\": {\n     \"description\": \"TLSMaxVersion sets the default maximum TLS version supported. Must be greater than or equal to `TLSMinVersion`. One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`. If unspecified, Envoy will default to TLS 1.3 as a max version for incoming connections.\",\n     \"type\": \"string\"\n    },\n    \"tlsMinVersion\": {\n     \"description\": \"TLSMinVersion sets the default minimum TLS version supported. One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`. If unspecified, Envoy v1.22.0 and newer will default to TLS 1.2 as a min version, while older releases of Envoy default to TLS 1.0.\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"enabled\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Ingress Gateway\",\n \"type\": \"object\"\n}"}